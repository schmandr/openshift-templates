apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: pgadmin4-template
  annotations:
    openshift.io/display-name: "All components for AGI Heatdrill Service"
    description: >-
      "Creates all necessary components for the AGI Heatdrill Service"
    openshift.io/long-description: >-
      "Creates all necessary components for the AGI Heatdrill Service"
    tags: "agi,gdi,pgadmin4,java"
    iconClass: icon-java
labels:
  createdBy: pgadmin4-template
parameters:
  - description: Environment
    name: env
    value:
  - description: Version of Image
    name: version
    required: true
    value:
  - description: Scheduled "true/false"
    name: scheduled
    required: true
    value: "false"
  - name: CPU_LIMIT
    description: "Set Limit for cpu"
    required: true
  - name: MEMORY_LIMIT
    description: "Set Limit for Memory Usage"
    required: true
  - name: CPU_REQUEST
    description: "Set Request for cpu"
    required: true
  - name: MEMORY_REQUEST
    description: "Set Request for Memory"
    required: true
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: pgadmin4
    labels:
      application: pgadmin4
  spec:
    tags:
    - from:
        kind: DockerImage
        name: dpage/pgadmin4:${version}
      importPolicy:
        scheduled: ${{scheduled}}
      name: ${version}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: template-pgadmin4
      description: Deployment Config for pgadmin4 Pod
    creationTimestamp: null
    generation: 1
    labels:
      application: pgadmin4
    name: pgadmin4
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      deploymentconfig: pgadmin4
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 10%
        maxUnavailable: 10%
        timeoutSeconds: 60
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: template-pgadmin4
        labels:
          application: pgadmin4
          deploymentconfig: pgadmin4
      spec:
        containers:
        - env:
          - name: PGADMIN_DEFAULT_EMAIL
            valueFrom:
              secretKeyRef:
                name: pgadmin4-secret
                key: username
          - name: PGADMIN_DEFAULT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: pgadmin4-secret
                key: password
          image: dpage/pgadmin4
          imagePullPolicy: IfNotPresent
          name: pgadmin4
          ports:
          - containerPort: 5050
            protocol: TCP
          resources:
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/lib/pgadmin
            name: pgadmin4
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: pgadmin4
          persistentVolumeClaim:
            claimName: pgadmin4-claim-lowback
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - pgadmin4
        from:
          kind: ImageStreamTag
          name: pgadmin4:${version}
          namespace: agi-infrastructure${env}
      type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    name: pgadmin4-service
    annotations:
      description: http port of application
    labels: 
      application: pgadmin4
  spec:
    selector:
      deploymentconfig: pgadmin4
    ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      name: "80"
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: pgadmin4-claim-lowback
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
    storageClassName: netapp
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      haproxy.router.openshift.io/timeout: 60s
    labels:
      application: pgadmin4
    name: pgadmin4
  spec:
    host: pgadmin4${env}.apps.ocp.so.ch
    port:
      targetPort: 80
    to:
      kind: Service
      name: pgadmin4-service
      weight: 100
    wildcardPolicy: None
